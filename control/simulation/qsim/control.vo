// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "12/01/2024 13:32:45"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module control3 (
	clk,
	reset,
	ea,
	s,
	O1,
	O0,
	M);
input 	clk;
input 	reset;
input 	ea;
input 	s;
input 	O1;
input 	O0;
output 	[3:0] M;

// Design Ports Information
// M[0]	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// M[1]	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// M[2]	=>  Location: PIN_N1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// M[3]	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// O1	=>  Location: PIN_L3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ea	=>  Location: PIN_N2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s	=>  Location: PIN_K5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// O0	=>  Location: PIN_P1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \O0~input_o ;
wire \M[0]~output_o ;
wire \M[1]~output_o ;
wire \M[2]~output_o ;
wire \M[3]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \ea~input_o ;
wire \s~input_o ;
wire \O1~input_o ;
wire \Mux1~0_combout ;
wire \M_int0~0_combout ;
wire \reset~input_o ;
wire \reset~inputclkctrl_outclk ;
wire \M_int0~q ;
wire \M_int2~0_combout ;
wire \M_int1~0_combout ;
wire \M_int1~q ;
wire \M_int2~1_combout ;
wire \M_int2~q ;
wire \M_int3~0_combout ;
wire \M_int3~q ;


// Location: IOIBUF_X0_Y4_N22
cycloneive_io_ibuf \O0~input (
	.i(O0),
	.ibar(gnd),
	.o(\O0~input_o ));
// synopsys translate_off
defparam \O0~input .bus_hold = "false";
defparam \O0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N23
cycloneive_io_obuf \M[0]~output (
	.i(\M_int0~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\M[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \M[0]~output .bus_hold = "false";
defparam \M[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N16
cycloneive_io_obuf \M[1]~output (
	.i(\M_int1~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\M[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \M[1]~output .bus_hold = "false";
defparam \M[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \M[2]~output (
	.i(\M_int2~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\M[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \M[2]~output .bus_hold = "false";
defparam \M[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \M[3]~output (
	.i(\M_int3~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\M[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \M[3]~output .bus_hold = "false";
defparam \M[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N22
cycloneive_io_ibuf \ea~input (
	.i(ea),
	.ibar(gnd),
	.o(\ea~input_o ));
// synopsys translate_off
defparam \ea~input .bus_hold = "false";
defparam \ea~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N8
cycloneive_io_ibuf \s~input (
	.i(s),
	.ibar(gnd),
	.o(\s~input_o ));
// synopsys translate_off
defparam \s~input .bus_hold = "false";
defparam \s~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y10_N22
cycloneive_io_ibuf \O1~input (
	.i(O1),
	.ibar(gnd),
	.o(\O1~input_o ));
// synopsys translate_off
defparam \O1~input .bus_hold = "false";
defparam \O1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N0
cycloneive_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (\ea~input_o  & (\s~input_o  & \O1~input_o ))

	.dataa(gnd),
	.datab(\ea~input_o ),
	.datac(\s~input_o ),
	.datad(\O1~input_o ),
	.cin(gnd),
	.combout(\Mux1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = 16'hC000;
defparam \Mux1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N20
cycloneive_lcell_comb \M_int0~0 (
// Equation(s):
// \M_int0~0_combout  = (\M_int0~q ) # ((!\O0~input_o  & \Mux1~0_combout ))

	.dataa(\O0~input_o ),
	.datab(gnd),
	.datac(\M_int0~q ),
	.datad(\Mux1~0_combout ),
	.cin(gnd),
	.combout(\M_int0~0_combout ),
	.cout());
// synopsys translate_off
defparam \M_int0~0 .lut_mask = 16'hF5F0;
defparam \M_int0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N15
cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \reset~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\reset~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\reset~inputclkctrl_outclk ));
// synopsys translate_off
defparam \reset~inputclkctrl .clock_type = "global clock";
defparam \reset~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y7_N21
dffeas M_int0(
	.clk(\clk~inputclkctrl_outclk ),
	.d(\M_int0~0_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\M_int0~q ),
	.prn(vcc));
// synopsys translate_off
defparam M_int0.is_wysiwyg = "true";
defparam M_int0.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N2
cycloneive_lcell_comb \M_int2~0 (
// Equation(s):
// \M_int2~0_combout  = (\ea~input_o  & (\s~input_o  & !\O1~input_o ))

	.dataa(gnd),
	.datab(\ea~input_o ),
	.datac(\s~input_o ),
	.datad(\O1~input_o ),
	.cin(gnd),
	.combout(\M_int2~0_combout ),
	.cout());
// synopsys translate_off
defparam \M_int2~0 .lut_mask = 16'h00C0;
defparam \M_int2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N18
cycloneive_lcell_comb \M_int1~0 (
// Equation(s):
// \M_int1~0_combout  = (\M_int1~q ) # ((\O0~input_o  & \M_int2~0_combout ))

	.dataa(\O0~input_o ),
	.datab(gnd),
	.datac(\M_int1~q ),
	.datad(\M_int2~0_combout ),
	.cin(gnd),
	.combout(\M_int1~0_combout ),
	.cout());
// synopsys translate_off
defparam \M_int1~0 .lut_mask = 16'hFAF0;
defparam \M_int1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y7_N19
dffeas M_int1(
	.clk(\clk~inputclkctrl_outclk ),
	.d(\M_int1~0_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\M_int1~q ),
	.prn(vcc));
// synopsys translate_off
defparam M_int1.is_wysiwyg = "true";
defparam M_int1.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N16
cycloneive_lcell_comb \M_int2~1 (
// Equation(s):
// \M_int2~1_combout  = (\M_int2~q ) # ((!\O0~input_o  & \M_int2~0_combout ))

	.dataa(\O0~input_o ),
	.datab(gnd),
	.datac(\M_int2~q ),
	.datad(\M_int2~0_combout ),
	.cin(gnd),
	.combout(\M_int2~1_combout ),
	.cout());
// synopsys translate_off
defparam \M_int2~1 .lut_mask = 16'hF5F0;
defparam \M_int2~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y7_N17
dffeas M_int2(
	.clk(\clk~inputclkctrl_outclk ),
	.d(\M_int2~1_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\M_int2~q ),
	.prn(vcc));
// synopsys translate_off
defparam M_int2.is_wysiwyg = "true";
defparam M_int2.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N30
cycloneive_lcell_comb \M_int3~0 (
// Equation(s):
// \M_int3~0_combout  = (\M_int3~q ) # ((\O0~input_o  & \Mux1~0_combout ))

	.dataa(\O0~input_o ),
	.datab(gnd),
	.datac(\M_int3~q ),
	.datad(\Mux1~0_combout ),
	.cin(gnd),
	.combout(\M_int3~0_combout ),
	.cout());
// synopsys translate_off
defparam \M_int3~0 .lut_mask = 16'hFAF0;
defparam \M_int3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y7_N31
dffeas M_int3(
	.clk(\clk~inputclkctrl_outclk ),
	.d(\M_int3~0_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\M_int3~q ),
	.prn(vcc));
// synopsys translate_off
defparam M_int3.is_wysiwyg = "true";
defparam M_int3.power_up = "low";
// synopsys translate_on

assign M[0] = \M[0]~output_o ;

assign M[1] = \M[1]~output_o ;

assign M[2] = \M[2]~output_o ;

assign M[3] = \M[3]~output_o ;

endmodule
