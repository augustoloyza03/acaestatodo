library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity contador_cambio is
    Port (
        clk       : in std_logic;        -- Señal de reloj
        reset     : in std_logic;        -- Señal de reset
        salida_0  : in std_logic;        -- Primer bit de entrada
        salida_1  : in std_logic;        -- Segundo bit de entrada
        contador  : out std_logic_vector(1 downto 0) -- Contador de 2 bits
    );
end contador_cambio;

architecture Behavioral of contador_cambio is
    signal salida_actual   : std_logic_vector(1 downto 0); -- Combina las entradas
    signal salida_anterior : std_logic_vector(1 downto 0) := "00";
    signal contador_int    : std_logic_vector(1 downto 0) := "00";
begin

    -- Combinar las señales de entrada en un vector
    salida_actual <= salida_1 & salida_0;

    process(clk, reset)
    begin
        if reset = '1' then
            contador_int <= "00";       -- Reiniciar el contador
            salida_anterior <= "00";   -- Reiniciar la salida anterior
        elsif rising_edge(clk) then
            if salida_actual /= salida_anterior then -- Detectar cambio en la entrada
                if salida_actual /= "00" then        -- Excluir incrementos si es "00"
                    contador_int <= contador_int + 1;
                end if;
                salida_anterior <= salida_actual;    -- Actualizar la salida anterior
            end if;
        end if;
    end process;

    contador <= contador_int;  -- Asignar el contador a la salida
end Behavioral;